// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestAPI.Data;

#nullable disable

namespace TestAPI.Data.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    partial class SampleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("TestAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2024, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            Quantity = 1,
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateTime(2024, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            Quantity = 2,
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 3,
                            OrderDate = new DateTime(2024, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            Quantity = 5,
                            Status = "Shipped"
                        },
                        new
                        {
                            Id = 4,
                            OrderDate = new DateTime(2024, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            Quantity = 1,
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 5,
                            OrderDate = new DateTime(2024, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 5,
                            Quantity = 1,
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 6,
                            OrderDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 6,
                            Quantity = 3,
                            Status = "Shipped"
                        },
                        new
                        {
                            Id = 7,
                            OrderDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 7,
                            Quantity = 2,
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 8,
                            OrderDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 8,
                            Quantity = 1,
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 9,
                            OrderDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 9,
                            Quantity = 4,
                            Status = "Shipped"
                        },
                        new
                        {
                            Id = 10,
                            OrderDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 10,
                            Quantity = 2,
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("TestAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Price = 999.99m,
                            ProductName = "Laptop",
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 2,
                            Price = 499.99m,
                            ProductName = "Smartphone",
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 3,
                            Price = 199.99m,
                            ProductName = "Headphones",
                            StockQuantity = 75
                        },
                        new
                        {
                            ProductId = 4,
                            Price = 249.99m,
                            ProductName = "Smartwatch",
                            StockQuantity = 30
                        },
                        new
                        {
                            ProductId = 5,
                            Price = 399.99m,
                            ProductName = "Gaming Console",
                            StockQuantity = 20
                        },
                        new
                        {
                            ProductId = 6,
                            Price = 49.99m,
                            ProductName = "Wireless Mouse",
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 7,
                            Price = 99.99m,
                            ProductName = "Bluetooth Speaker",
                            StockQuantity = 80
                        },
                        new
                        {
                            ProductId = 8,
                            Price = 79.99m,
                            ProductName = "External Hard Drive",
                            StockQuantity = 60
                        },
                        new
                        {
                            ProductId = 9,
                            Price = 29.99m,
                            ProductName = "USB-C Hub",
                            StockQuantity = 200
                        },
                        new
                        {
                            ProductId = 10,
                            Price = 299.99m,
                            ProductName = "Monitor",
                            StockQuantity = 40
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
